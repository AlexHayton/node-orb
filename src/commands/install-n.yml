description: >
  Install the latest stable release of the `n` Node version manager, for
  quickly selecting/switching Node versions at runtime:
  https://github.com/tj/n

parameters:
  select-node-version:
    type: boolean
    default: true
    description: >
      If `true`, use `n` to install and activate a particular Node version

  node-version:
    type: string
    default: lts
    description: >
      Node version to activate. Provide a semantically versioned Node
      release, or else a string like `lts` or `latest`

steps:
  - run:
      name: Install `n`
      command: |
        while true; \
          do INDEX_BODY=$(curl --show-error --location --fail --retry 3 \
            https://api.github.com/repos/tj/n/releases | \
            jq --argjson index "$INDEX" '.[$index]') \
            # Filter out drafts & prereleases
            && if [[ $(echo "$INDEX_BODY" | tr '\r\n' ' ' | grep -v '"draft": true' && echo "$INDEX_BODY" | tr '\r\n' ' ' | grep -v '"prerelease": true') ]]; then \
              INDEX_VERSION=$(echo "$INDEX_BODY" | tr '\r\n' ' ' | jq '.tag_name') \
              && N_VERSION="${INDEX_VERSION:1:$((${#INDEX_VERSION} - 1 - 1))}" \
              && break; \
            else \
              INDEX=$((INDEX + 1)); \
            fi; \
          done \
        # Download/install N
        && curl --show-error --location --fail --retry 3 --output /usr/local/bin/n \
          "https://raw.githubusercontent.com/tj/n/$N_VERSION/bin/n" \
        && chmod +x /usr/local/bin/n \
        # Test/verify N version
        && command -v n \
        && n --version | grep "${N_VERSION:1}" \

  - when:
      condition: <<parameters.select-node-version>>
      steps:
        - run:
            name: Activate Node <<parameters.node-version>>
            command: |
              n <<parameters.node-version>>
              node --version
